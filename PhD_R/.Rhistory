c = 5
library(fbrs)
install.packages('fbrs')
library(frbs)
install.packages('frbs')
library(dplyr)
data('iris', package = 'datasets')
data('iris', package = 'datasets')
iris
iris_shuffled <- iris[sample(nrow(iris)), ]
?sample
sample(3)
sample(10)
nrow(iris)
str(iris)
iris_shuffled$Species <- unclass(iris_shuffled$Species)
range_data_input <- apply(iris[, -ncol(iris)], 2, range)
head(iris_shuffled)
data('iris', package = 'datasets')
iris_shuffled <- iris[sample(nrow(iris)), ]
head(iris_shuffled)
iris_shuffled$Species <- unclass(iris_shuffled$Species)
head(iris_shuffled)
head(tst.iris)
range_data_input <- apply(iris[, -ncol(iris)], 2, range)
head(range_data_input)
tst.iris <- irisShuffled[141:nrow(irisShuffled), 1:4]
head(tst.iris)
tst.iris <- iris_huffled[141:nrow(iris_shuffled), 1:4]
head(tst.iris)
ra.iris <- iris_shuffled[1:140, ]
tst.iris <- iris_shuffled[141:nrow(iris_shuffled), 1:4]
head(tst.iris)
real.iris <- matrix(iris_shuffled[141:nrow(iris_shuffled), 5], ncol = 1)
head(real.iris)
source('~/Documents/PhD/PhD_R/frbs_initial_learning.R')
source('~/Documents/PhD/PhD_R/frbs_initial_learning.R')
object_frbcs_w <- frgcs.learn(tra_iris, range_data_input,
method.type = 'FRBCS.W', control = list(
num.labels = 3,
type.mf = 'TRAPEZOID'))
object_frbcs_w <- frbcs.learn(tra_iris, range_data_input,
method.type = 'FRBCS.W', control = list(
num.labels = 3,
type.mf = 'TRAPEZOID'))
object_frbs_w <- frbs.learn(tra_iris, range_data_input,
method.type = 'FRBCS.W', control = list(
num.labels = 3,
type.mf = 'TRAPEZOID'))
rm ra_iris
rm(ra_iris)
source('~/Documents/PhD/PhD_R/frbs_initial_learning.R')
source('~/Documents/PhD/PhD_R/frbs_initial_learning.R')
object_frbs_w <- frbs.learn(tra_iris, range_data_input,
method.type = 'FRBCS.W', control = list(
num.labels = 3,
type.mf = 'TRAPEZOID'))
summary(object_frbs_w)
pred <- predict(object_frbs_w, tst_iris)
err <- 100 * sum(pred != real_iris)/length(pred)
err
plot(object_frbs_w)
source('~/Documents/PhD/PhD_R/frbs_initial_learning.R')
source('~/Documents/PhD/PhD_R/frbs_initial_learning.R')
summary(object)
## Please take into account that the interval needed is the range of input data only.
range.data.input <- apply(iris[, -ncol(iris)], 2, range)
source('~/Documents/PhD/PhD_R/frbs_initial_learning.R')
source('~/Documents/PhD/PhD_R/frbs_initial_learning.R')
source('~/Documents/PhD/PhD_R/frbs_initial_learning.R')
source('~/Documents/PhD/PhD_R/frbs_initial_learning.R')
install.packages('descTools')
install.packages('DescTools')
getwd()
library(readxl)
library(ggplot2)
library(ggthemes)
install.packages(c('ggthemes', 'caret', 'matrixStats', 'stringr', 'purrr'))
install.packages(c("ggthemes", "caret", "matrixStats", "stringr", "purrr"))
library(readxl)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(tidyr)
library(matrixStats)
library(caret)
library(AppliedPredictiveModeling)
install.packages('AppliedPredictiveModeling')
library(AppliedPredictiveModeling)
library(stringr)
library(readr)
library(purrr)
library(frbs)
init_data <- read_excel("PhD_podaci/PAP svi OMIS podaci sredjeni.xlsx'")
init_data <- read_excel("/PhD_podaci/PAP svi OMIS podaci sredjeni.xlsx'")
init_data <- read_excel("/PhD_podaci/'PAP svi OMIS podaci sredjeni.xlsx'")
init_data <- read_excel("~/Documents/PhD/PhD_R/PhD_podaci/'PAP svi OMIS podaci sredjeni.xlsx'")
init_data <- read_excel("/home/Documents/PhD/PhD_R/PhD_podaci/'PAP svi OMIS podaci sredjeni.xlsx'")
init_data <- read_excel('/home/Documents/PhD/PhD_R/PhD_podaci/"PAP svi OMIS podaci sredjeni.xlsx"')
init_data <- read_excel('~/Documents/PhD/PhD_R/PhD_podaci/"PAP svi OMIS podaci sredjeni.xlsx"')
setwd('â€˜~/Documents/PhD/PhD_R/PhD_podaci/')
setwd('~/Documents/PhD/PhD_R/PhD_podaci/')
init_data <- read_excel("PAP svi OMIS podaci sredjeni.xlsx")
init_data <- read_excel('~/Documents/PhD/PhD_R/PhD_podaci/PAP_svi_OMIS_podaci_sredjeni.xlsx')
setwd("~/Documents/PhD/PhD_R")
# Checking the df
str(init_data)
head(init_data)
# Get rid of the second column
init_data <- init_data[-2]
head(init_data)
source('~/Documents/PhD/PhD_R/frbs_initial_learning.R')
data_shuffled <- init_data[sample(nrow(init_data)), ]
head(init_data)
init_data <- group_by(CLASS) %>% summarise(n = n())
init_data %>% group_by(CLASS) %>% summarise(n = n())
source('~/Documents/PhD/PhD_R/PAP_fuzzy.R')
range_data_input <- apply(data_shuffled[, -ncol(data_shuffled)], 2, range)
head(range_data_input)
range_data_input
dim(data_shuffled)
round(602*0.7)
head(init_data)
init_data <- read_excel('~/Documents/PhD/PhD_R/PhD_podaci/PAP_svi_OMIS_podaci_sredjeni.xlsx')
# Provera strukture i sadrzaja df-a
str(init_data)
head(init_data)
# Izbacivanje nepotrebnih kolona
init_data <- init_data[-c(2,3)]
head(init_data)
init_data %>% group_by(CLASS) %>% summarise(n = n()) #broj uzoraka 4-te klase je prilicno mali - neuravnotezen skup podataka
data_shuffled <- init_data[sample(nrow(init_data)), ]
init_data <- read_excel('~/Documents/PhD/PhD_R/PhD_podaci/PAP_svi_OMIS_podaci_sredjeni.xlsx')
# Provera strukture i sadrzaja df-a
str(init_data)
head(init_data)
# set.seed() da bi se obezbedila reproduktibilnost
set.seed(333)
head(init_data)
init_data <- read_excel('~/Documents/PhD/PhD_R/PhD_podaci/PAP_svi_OMIS_podaci_sredjeni.xlsx')
# Provera strukture i sadrzaja df-a
str(init_data)
head(init_data)
# set.seed() da bi se obezbedila reproduktibilnost
set.seed(333)
# Izbacivanje nepotrebnih kolona
init_data <- init_data[-c(2,3)]
head(init_data)
# Prebacivanje prve kolone na kraj
init_data <- init_data %>% select(everything(), CLASS)
head(init_data)
# Prebacivanje prve kolone na kraj
init_data <- init_data %>% select(-CLASS, everything())
head(init_data)
head(init_data[ncol(init_data)])
# Proverimo strukturu podataka
init_data %>% group_by(CLASS) %>% summarise(n = n()) #broj uzoraka 4-te klase je prilicno mali - neuravnotezen skup podataka
data_shuffled <- init_data[sample(nrow(init_data)), ]
range_data_input <- apply(data_shuffled[, -ncol(data_shuffled)], 2, range)
range_data_input
dim(data_shuffled)
tst_iris <- iris_shuffled[141:nrow(iris_shuffled), -5]
head(tst_iris)
real_iris <- matrix(iris_shuffled[141:nrow(iris_shuffled), 5], ncol = 1)
head(real_iris)
object_frbs_w <- frbs.learn(tra_iris, range_data_input,
method.type = 'FRBCS.W', control = list(
num.labels = 3,
type.mf = 'TRAPEZOID'))
summary(object_frbs_w)
source('~/Documents/PhD/PhD_R/frbs_initial_learning.R')
source('~/Documents/PhD/PhD_R/frbs_initial_learning.R')
data('iris', package = 'datasets')
iris_shuffled <- iris[sample(nrow(iris)), ]
head(iris_shuffled)
iris_shuffled$Species <- unclass(iris_shuffled$Species)
head(iris_shuffled)
range_data_input <- apply(iris[, -ncol(iris)], 2, range)
head(range_data_input)
tra_iris <- iris_shuffled[1:140, ]
tst_iris <- iris_shuffled[141:nrow(iris_shuffled), -5]
head(tst_iris)
real_iris <- matrix(iris_shuffled[141:nrow(iris_shuffled), 5], ncol = 1)
head(real_iris)
object_frbs_w <- frbs.learn(tra_iris, range_data_input,
method.type = 'FRBCS.W', control = list(
num.labels = 3,
type.mf = 'TRAPEZOID'))
summary(object_frbs_w)
pred <- predict(object_frbs_w, tst_iris)
err <- 100 * sum(pred != real_iris)/length(pred)
err
plotMF(object_frbs_w)
train_data <- data_shuffled[1:421, ]
test_data <- data_shuffled[421:nrow(data_shuffled), -ncol(data_shuffled)]
head(test_data)
a = c(1,2,3)
a[-1]
real_test_data <- matrix(data_shuffled[421:nrow(data_shuffled), -ncol(data_shuffled)], ncol = 1)
head(real_test_data)
real_test_data <- matrix(data_shuffled[421:nrow(data_shuffled), ncol(data_shuffled)], ncol = 1)
head(real_test_data)
train_data <- data_shuffled[1:421, ]
test_data <- data_shuffled[421:nrow(data_shuffled), -ncol(data_shuffled)]
head(test_data)
real_test_data <- matrix(data_shuffled[421:nrow(data_shuffled), ncol(data_shuffled)], ncol = 1)
head(real_test_data)
head(real_iris)
head(init_data[ncol(init_data)])
# Proverimo strukturu podataka
init_data %>% group_by(CLASS) %>% summarise(n = n()) #broj uzoraka 4-te klase je prilicno mali - neuravnotezen skup podataka
init_data <- read_excel('~/Documents/PhD/PhD_R/PhD_podaci/PAP_svi_OMIS_podaci_sredjeni.xlsx')
# Provera strukture i sadrzaja df-a
str(init_data)
head(init_data)
# set.seed() da bi se obezbedila reproduktibilnost
set.seed(333)
# Izbacivanje nepotrebnih kolona
init_data <- init_data[-c(2,3)]
head(init_data)
# Prebacivanje prve kolone na kraj
init_data <- init_data %>% select(-CLASS, everything())
head(init_data)
head(init_data[ncol(init_data)])
# Proverimo strukturu podataka
init_data %>% group_by(CLASS) %>% summarise(n = n()) #broj uzoraka 4-te klase je prilicno mali - neuravnotezen skup podataka
data_shuffled <- init_data[sample(nrow(init_data)), ]
head(data_shuffled)
head(data_shuffled[ncol(data_shuffled)])
range_data_input <- apply(data_shuffled[, -ncol(data_shuffled)], 2, range)
range_data_input
# Formiranje trening i test skupa podataka
dim(data_shuffled)
train_data <- data_shuffled[1:421, ]
test_data <- data_shuffled[421:, -ncol(data_shuffled)]
test_data <- data_shuffled[421: , -ncol(data_shuffled)]
test_data <- data_shuffled[421:nrow(data_shuffled), -ncol(data_shuffled)]
head(test_data)
head(test_data[ncol(test_data)])
head(data_shuffled[421:nrow(data_shuffled), ncol(data_shuffled)])
class_test_data <- matrix(data_shuffled[421:nrow(data_shuffled), ncol(data_shuffled)], ncol = 1)
head(class_test_data)
class_test_data
str(iris_shuffled[141:nrow(iris_shuffled), 5])
str(data_shuffled[421:nrow(data_shuffled), ncol(data_shuffled)])
class_test_data <- matrix(as.data.frame(data_shuffled[421:nrow(data_shuffled), ncol(data_shuffled)], ncol = 1))
class_test_data
as.data.frame(data_shuffled[421:nrow(data_shuffled), ncol(data_shuffled)]
class_test_data <- matrix(as.data.frame(data_shuffled[421:nrow(data_shuffled), ncol(data_shuffled)]), ncol = 1)
as.data.frame(data_shuffled[421:nrow(data_shuffled), ncol(data_shuffled)])
head(as.data.frame(data_shuffled[421:nrow(data_shuffled), ncol(data_shuffled)]))
str(as.data.frame(data_shuffled[421:nrow(data_shuffled), ncol(data_shuffled)]))
class_test_data <- matrix(as.integer(data_shuffled[421:nrow(data_shuffled), ncol(data_shuffled)]), ncol = 1)
class_test_data <- matrix(as.integer(unlist(data_shuffled[421:nrow(data_shuffled), ncol(data_shuffled)])), ncol = 1)
class_test_data
head(class_test_data)
object_frbs_w <- frbs.learn(train_data, range_data_input,
method.type = 'FRBCS.W', control = list(
num.labels = 3,
type.mf = 'TRAPEZOID'))
summary(object_frbs_w)
pred <- predict(object_frbs_w, tst_iris)
pred <- predict(object_frbs_w, test_data)
err <- 100 * sum(pred != class_test_data)/length(pred)
err
object_frbs_w <- frbs.learn(train_data, range_data_input,
method.type = 'FRBCS.W', control = list(
num.labels = 5,
type.mf = 'TRAPEZOID'))
summary(object_frbs_w)
pred <- predict(object_frbs_w, test_data)
err <- 100 * sum(pred != class_test_data)/length(pred)
err # 72.52747
object_frbs_w <- frbs.learn(train_data, range_data_input,
method.type = 'FRBCS.W', control = list(
num.labels = 7,
type.mf = 'TRAPEZOID'))
pred <- predict(object_frbs_w, test_data)
err <- 100 * sum(pred != class_test_data)/length(pred)
err # 73.07692 sa num.labels = 5
pred <- predict(object_frbs_w, test_data)
acc <- 1- 100 * sum(pred != class_test_data)/length(pred)
acc # 97.8022 sa num.labels = 7
acc <- 1 - sum(pred != class_test_data)/length(pred)
acc # 97.8022 sa num.labels = 7
